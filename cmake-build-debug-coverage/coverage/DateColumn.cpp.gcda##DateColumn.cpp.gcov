        -:    0:Source:C:/Users/Daniel/CLionProjects/Sem/server/Table/DateColumn.cpp
        -:    0:Graph:C:\Users\Daniel\CLionProjects\Sem\cmake-build-debug-coverage\CMakeFiles\Sem.dir\server\Table\DateColumn.cpp.gcno
        -:    0:Data:C:\Users\Daniel\CLionProjects\Sem\cmake-build-debug-coverage\CMakeFiles\Sem.dir\server\Table\DateColumn.cpp.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:#include "DateColumn.h"
        -:    3:#include <iostream>
        -:    4:#include <stdexcept>
        -:    5:
function _ZN10DateColumnC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb called 0 returned 0% blocks executed 0%
    #####:    6:DateColumn::DateColumn(const std::string& columnName, bool isNotNull)
    #####:    7:        : TableColumnBase(columnName, isNotNull, false), values() {}
    %%%%%:    7-block  0
call    0 never executed
call    1 never executed
        -:    8:
function _ZNK10DateColumn11printHeaderEv called 0 returned 0% blocks executed 0%
    #####:    9:void DateColumn::printHeader() const {
    #####:   10:    std::cout << getName() << " (date)\t";
    %%%%%:   10-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:   10-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   10-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   10-block  3
call    9 never executed
    $$$$$:   10-block  4
call   10 never executed
    #####:   11:}
        -:   12:
function _ZNK10DateColumn10printValueEy called 0 returned 0% blocks executed 0%
    #####:   13:void DateColumn::printValue(size_t rowIndex) const {
    #####:   14:    std::cout << values[rowIndex] << "\t\t";
    %%%%%:   14-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   15:}
        -:   16:
function _ZN10DateColumn8addValueERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   17:void DateColumn::addValue(const std::string& value) {
    #####:   18:    if (value.empty() && isNotNullColumn()) {
    %%%%%:   18-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:   18-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:   18-block  2
    %%%%%:   18-block  3
    %%%%%:   18-block  4
branch  6 never executed (fallthrough)
branch  7 never executed
    #####:   19:        throw std::invalid_argument("NULL value not allowed for NOT NULL column.");
    %%%%%:   19-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   19-block  1
call    4 never executed
    $$$$$:   19-block  2
call    5 never executed
        -:   20:    }
    #####:   21:    if ((value.empty() && !isNotNullColumn()) || value.size() <= 0) {
    %%%%%:   21-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:   21-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:   21-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed
    %%%%%:   21-block  3
    %%%%%:   21-block  4
    %%%%%:   21-block  5
branch  9 never executed (fallthrough)
branch 10 never executed
    #####:   22:        std::string value1 = "NULL";
    %%%%%:   22-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    $$$$$:   22-block  1
    #####:   23:        values.push_back(value1);
    %%%%%:   23-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   24:    } else {
    %%%%%:   24-block  0
call    0 never executed
    $$$$$:   24-block  1
call    1 never executed
    #####:   25:        values.push_back(value);
    %%%%%:   25-block  0
call    0 never executed
        -:   26:    }
    #####:   27:}
    %%%%%:   27-block  0
        -:   28:
function _ZN10DateColumn11uploadValueEyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   29:void DateColumn::uploadValue(size_t rowIndex, const std::string& value) {
    #####:   30:    if (value.empty() && isNotNullColumn()) {
    %%%%%:   30-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:   30-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:   30-block  2
    %%%%%:   30-block  3
    %%%%%:   30-block  4
branch  6 never executed (fallthrough)
branch  7 never executed
    #####:   31:        throw std::invalid_argument("NULL value not allowed for NOT NULL column.");
    %%%%%:   31-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   31-block  1
call    4 never executed
    $$$$$:   31-block  2
call    5 never executed
        -:   32:    }
        -:   33:
    #####:   34:    if ((value.empty() && !isNotNullColumn()) || value.size() <= 0) {
    %%%%%:   34-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:   34-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:   34-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed
    %%%%%:   34-block  3
    %%%%%:   34-block  4
    %%%%%:   34-block  5
branch  9 never executed (fallthrough)
branch 10 never executed
    #####:   35:        std::string value1 = "NULL";
    %%%%%:   35-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    $$$$$:   35-block  1
    #####:   36:        values[rowIndex] = value1;
    %%%%%:   36-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    #####:   37:    } else {
    %%%%%:   37-block  0
call    0 never executed
    $$$$$:   37-block  1
call    1 never executed
    #####:   38:        values[rowIndex] = value;
    %%%%%:   38-block  0
call    0 never executed
call    1 never executed
        -:   39:    }
    #####:   40:}
    %%%%%:   40-block  0
        -:   41:
function _ZN10DateColumn15uploadAllValuesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ called 0 returned 0% blocks executed 0%
    #####:   42:int DateColumn::uploadAllValues(const std::string& oldValue, const std::string& newValue) {
    #####:   43:    if (oldValue.empty()) {
    %%%%%:   43-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   44:        throw std::invalid_argument("Old value cannot be empty.");
    %%%%%:   44-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:   44-block  1
call    4 never executed
    $$$$$:   44-block  2
call    5 never executed
        -:   45:    }
    #####:   46:    int updatedRows = 0;
    #####:   47:    for (size_t i = 0; i < values.size(); ++i) {
    %%%%%:   47-block  0
    %%%%%:   47-block  1
    %%%%%:   47-block  2
call    0 never executed
branch  1 never executed
branch  2 never executed (fallthrough)
    #####:   48:        if (!values[i].empty() && values[i] == oldValue) {
    %%%%%:   48-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%:   48-block  1
call    4 never executed
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%:   48-block  2
    %%%%%:   48-block  3
    %%%%%:   48-block  4
branch  8 never executed (fallthrough)
branch  9 never executed
    #####:   49:            values[i] = newValue;
    %%%%%:   49-block  0
call    0 never executed
call    1 never executed
    #####:   50:            updatedRows++;
        -:   51:        }
        -:   52:    }
    #####:   53:    return updatedRows;
    %%%%%:   53-block  0
    %%%%%:   53-block  1
        -:   54:}
        -:   55:
function _ZN10DateColumn7getSizeEv called 0 returned 0% blocks executed 0%
    #####:   56:int DateColumn::getSize() {
    #####:   57:    return values.size();
    %%%%%:   57-block  0
call    0 never executed
        -:   58:}
        -:   59:
function _ZN10DateColumn13containsValueERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   60:bool DateColumn::containsValue(const std::string& value) {
    #####:   61:    for (const auto val : values) {
    %%%%%:   61-block  0
call    0 never executed
call    1 never executed
    %%%%%:   61-block  1
call    2 never executed
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:   61-block  2
call    6 never executed
    %%%%%:   61-block  3
call    7 never executed
branch  8 never executed
branch  9 never executed (fallthrough)
    #####:   62:        if (value == val) {
    %%%%%:   62-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   63:            return true;
    %%%%%:   63-block  0
        -:   64:            break;
        -:   65:        }
    #####:   66:    }
    %%%%%:   66-block  0
    %%%%%:   66-block  1
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   67:    return false;
    %%%%%:   67-block  0
        -:   68:}
        -:   69:
function _ZN10DateColumn11deleteValueERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   70:bool DateColumn::deleteValue(const std::string& value){
    #####:   71:    bool deleted = false;
        -:   72:    try {
    #####:   73:        std::string number = value;
    %%%%%:   73-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   74:        if (values.size() > 0) {
    %%%%%:   74-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    #####:   75:            std::vector<std::string> tempValues;
    #####:   76:            for (size_t i = 0; i < values.size(); ++i) {
    %%%%%:   76-block  0
    %%%%%:   76-block  1
    %%%%%:   76-block  2
call    0 never executed
branch  1 never executed
branch  2 never executed (fallthrough)
    #####:   77:                if (values[i] != number) {
    %%%%%:   77-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:   78:                    tempValues.push_back(values[i]);
    %%%%%:   78-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        -:   79:                }
        -:   80:                else{
    #####:   81:                    deleted = true;
    %%%%%:   81-block  0
        -:   82:                };
        -:   83:            }
    #####:   84:            values.clear();
    %%%%%:   84-block  0
call    0 never executed
    #####:   85:            values = tempValues;
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:   86:            tempValues.clear();
    %%%%%:   86-block  0
call    0 never executed
    #####:   87:        }
call    0 never executed
    $$$$$:   87-block  0
call    1 never executed
    #####:   88:    }
    %%%%%:   88-block  0
call    0 never executed
    $$$$$:   88-block  1
call    1 never executed
    =====:   89:    catch(const std::invalid_argument& e){
    $$$$$:   89-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    $$$$$:   89-block  1
call    2 never executed
    =====:   90:        std::cerr << "Wrong value!!\n";
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    =====:   91:    }
    $$$$$:   91-block  0
call    0 never executed
    $$$$$:   91-block  1
call    1 never executed
    #####:   92:    return deleted;
    %%%%%:   92-block  0
    %%%%%:   92-block  1
        -:   93:}
        -:   94:
        -:   95:
function _ZNK10DateColumn8getValueB5cxx11Ey called 0 returned 0% blocks executed 0%
    #####:   96:std::string DateColumn::getValue(size_t rowIndex) const {
    #####:   97:    if (!values[rowIndex].empty()) {
    %%%%%:   97-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:   98:        return values[rowIndex];
    %%%%%:   98-block  0
call    0 never executed
call    1 never executed
        -:   99:    } else {
    #####:  100:        return "NULL";
    %%%%%:  100-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  100-block  1
        -:  101:    }
        -:  102:}
        -:  103:
function _ZN10DateColumn14getDescriptionB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:  104:std::string DateColumn::getDescription(){
    #####:  105:    return "Name: " + getName() + ", Type: (date), is not Null:: " + std::to_string(isNotNullColumn());
    %%%%%:  105-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  105-block  1
call    3 never executed
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  105-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  105-block  3
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  105-block  4
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:  105-block  5
    %%%%%:  105-block  6
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
    %%%%%:  105-block  7
    $$$$$:  105-block  8
call   20 never executed
    $$$$$:  105-block  9
call   21 never executed
    $$$$$:  105-block 10
call   22 never executed
    $$$$$:  105-block 11
    $$$$$:  105-block 12
    $$$$$:  105-block 13
    $$$$$:  105-block 14
call   23 never executed
        -:  106:}
        -:  107:
function _ZN10DateColumn8getTypeaB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:  108:std::string DateColumn::getTypea(){
    %%%%%:  108-block  0
    #####:  109:    return "date";
    %%%%%:  109-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  109-block  1
    %%%%%:  109-block  2
        -:  110:}
        -:  111:
    #####:  112:DateColumn::~DateColumn() {
    #####:  113:    values.clear();
    #####:  114:}
------------------
_ZN10DateColumnD0Ev:
function _ZN10DateColumnD0Ev called 0 returned 0% blocks executed 0%
    #####:  112:DateColumn::~DateColumn() {
        -:  113:    values.clear();
    #####:  114:}
    %%%%%:  114-block  0
call    0 never executed
call    1 never executed
------------------
_ZN10DateColumnD2Ev:
function _ZN10DateColumnD2Ev called 0 returned 0% blocks executed 0%
    #####:  112:DateColumn::~DateColumn() {
    #####:  113:    values.clear();
    %%%%%:  113-block  0
call    0 never executed
    #####:  114:}
call    0 never executed
call    1 never executed
------------------
        -:  115:
        -:  116:
